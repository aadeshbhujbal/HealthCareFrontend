name: Deploy Healthcare Frontend Web

on:
  push:
    branches: [main]
    paths:
      - 'apps/web/**'
      - 'shared/**'
      - '.github/workflows/deploy.yml'
  pull_request:
    branches: [main]
    paths:
      - 'apps/web/**'
      - 'shared/**'
      - '.github/workflows/deploy.yml'

env:
  SERVER_HOST: 82.208.20.16
  SERVER_USER: ${{ secrets.SERVER_USER }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  FRONTEND_DEPLOY_PATH: /var/www/healthcare/frontend
  DOMAIN: ishswami.in
  NODE_ENV: production
  NEXT_PUBLIC_API_URL: https://api.ishswami.in
  NEXT_PUBLIC_DOMAIN: ishswami.in

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install dependencies
        run: |
          yarn install --frozen-lockfile
          yarn global add nx@latest

      - name: Create production env file
        run: |
          cat > apps/web/.env.production << EOL
          NEXT_PUBLIC_API_URL=${{ env.NEXT_PUBLIC_API_URL }}
          NEXT_PUBLIC_DOMAIN=${{ env.NEXT_PUBLIC_DOMAIN }}
          NODE_ENV=production
          EOL

      - name: Build web application
        run: |
          yarn nx build web
          yarn nx export web || yarn build:web && yarn export:web

      - name: Create deployment package
        run: |
          mkdir -p deployment
          if [ -d "apps/web/out" ]; then
            cp -r apps/web/out/* deployment/
          elif [ -d "dist/apps/web/exported" ]; then
            cp -r dist/apps/web/exported/* deployment/
          else
            echo "Could not find build output directory"
            exit 1
          fi

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        env:
          DEPLOY_PATH: ${{ env.FRONTEND_DEPLOY_PATH }}
          DOMAIN: ${{ env.DOMAIN }}
        with:
          host: ${{ env.SERVER_HOST }}
          username: ${{ env.SERVER_USER }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          envs: DEPLOY_PATH,DOMAIN
          script: |
            # Create deployment directory
            mkdir -p $DEPLOY_PATH/deployments
            cd $DEPLOY_PATH/deployments
            timestamp=$(date +%Y%m%d_%H%M%S)
            mkdir -p $timestamp
            echo $timestamp > $DEPLOY_PATH/current_deployment

            # Copy deployment files
            cp -r deployment/* $DEPLOY_PATH/deployments/$timestamp/

            # Update symlink to new deployment
            ln -sfn $DEPLOY_PATH/deployments/$timestamp $DEPLOY_PATH/current

            # Set proper permissions
            chmod -R 755 $DEPLOY_PATH/deployments/$timestamp

            # Verify deployment
            if [ -f "$DEPLOY_PATH/current/index.html" ]; then
              echo "Deployment successful - index.html found"
              exit 0
            else
              echo "Deployment failed - index.html not found"
              exit 1
            fi

  rollback:
    if: failure()
    needs: build-and-deploy
    runs-on: ubuntu-latest
    steps:
      - name: Rollback deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SERVER_HOST }}
          username: ${{ env.SERVER_USER }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ env.FRONTEND_DEPLOY_PATH }}

            # Get previous deployment
            current=$(cat current_deployment)
            previous=$(ls -1 deployments | grep -v $current | tail -n 1)

            if [ ! -z "$previous" ]; then
              echo "Rolling back to deployment: $previous"
              
              # Switch to previous deployment
              ln -sfn ${{ env.FRONTEND_DEPLOY_PATH }}/deployments/$previous ${{ env.FRONTEND_DEPLOY_PATH }}/current
              echo $previous > current_deployment
              
              # Verify rollback
              if [ -f "${{ env.FRONTEND_DEPLOY_PATH }}/current/index.html" ]; then
                echo "Rollback successful"
                exit 0
              else
                echo "Rollback failed - index.html not found"
                exit 1
              fi
            else
              echo "No previous deployment found for rollback"
              exit 1
            fi
